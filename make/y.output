Terminals unused in grammar

   VARIABLE
   t_print
   t_enter


State 8 conflicts: 4 shift/reduce
State 32 conflicts: 4 shift/reduce
State 33 conflicts: 5 shift/reduce
State 34 conflicts: 4 shift/reduce
State 35 conflicts: 4 shift/reduce
State 36 conflicts: 5 shift/reduce
State 44 conflicts: 6 shift/reduce
State 46 conflicts: 6 shift/reduce


Grammar

    0 $accept: START $end

    1 START: START GLOBAL
    2      | GLOBAL

    3 GLOBAL: VAR
    4       | POLYNOM

    5 VAR: t_variable_name t_short_assignment POLYNOM

    6 POLYNOM: VAR_IN_POW SIGN EXPR
    7        | VAR_IN_POW
    8        | EXPR SIGN VAR_IN_POW

    9 VAR_IN_POW: t_variable
   10           | t_variable POW

   11 POW: t_power t_number
   12    | t_power SKOB_I

   13 SKOB_I: t_open_paren EXPR_I t_close_paren

   14 EXPR_I: EXPR_I_FULFILL SIGN EXPR_I_FULFILL
   15       | EXPR_I_FULFILL EXPR_I_FULFILL

   16 EXPR_I_FULFILL: t_number
   17               | SKOB_I
   18               | EXPR_I

   19 SKOB: t_open_paren EXPR t_close_paren

   20 EXPR: POLYNOM SIGN POLYNOM
   21     | POLYNOM SIGN SKOB
   22     | SKOB SIGN POLYNOM
   23     | SKOB SIGN SKOB
   24     | SKOB SKOB

   25 SIGN: t_plus
   26     | t_minus
   27     | t_multiplication
   28     | t_division


Terminals, with rules where they appear

$end (0) 0
error (256)
t_number (258) 11 16
t_variable (259) 9 10
t_variable_name (260) 5
VARIABLE (261)
t_print (262)
t_short_assignment (263) 5
t_enter (264)
t_plus (265) 25
t_minus (266) 26
t_division (267) 28
t_multiplication (268) 27
t_power (269) 11 12
t_close_paren (270) 13 19
t_open_paren (271) 13 19


Nonterminals, with rules where they appear

$accept (17)
    on left: 0
START (18)
    on left: 1 2, on right: 0 1
GLOBAL (19)
    on left: 3 4, on right: 1 2
VAR (20)
    on left: 5, on right: 3
POLYNOM (21)
    on left: 6 7 8, on right: 4 5 20 21 22
VAR_IN_POW (22)
    on left: 9 10, on right: 6 7 8
POW (23)
    on left: 11 12, on right: 10
SKOB_I (24)
    on left: 13, on right: 12 17
EXPR_I (25)
    on left: 14 15, on right: 13 18
EXPR_I_FULFILL (26)
    on left: 16 17 18, on right: 14 15
SKOB (27)
    on left: 19, on right: 21 22 23 24
EXPR (28)
    on left: 20 21 22 23 24, on right: 6 8 19
SIGN (29)
    on left: 25 26 27 28, on right: 6 8 14 20 21 22 23


State 0

    0 $accept: . START $end

    t_variable       shift, and go to state 1
    t_variable_name  shift, and go to state 2
    t_open_paren     shift, and go to state 3

    START       go to state 4
    GLOBAL      go to state 5
    VAR         go to state 6
    POLYNOM     go to state 7
    VAR_IN_POW  go to state 8
    SKOB        go to state 9
    EXPR        go to state 10


State 1

    9 VAR_IN_POW: t_variable .
   10           | t_variable . POW

    t_power  shift, and go to state 11

    $default  reduce using rule 9 (VAR_IN_POW)

    POW  go to state 12


State 2

    5 VAR: t_variable_name . t_short_assignment POLYNOM

    t_short_assignment  shift, and go to state 13


State 3

   19 SKOB: t_open_paren . EXPR t_close_paren

    t_variable    shift, and go to state 1
    t_open_paren  shift, and go to state 3

    POLYNOM     go to state 14
    VAR_IN_POW  go to state 8
    SKOB        go to state 9
    EXPR        go to state 15


State 4

    0 $accept: START . $end
    1 START: START . GLOBAL

    $end             shift, and go to state 16
    t_variable       shift, and go to state 1
    t_variable_name  shift, and go to state 2
    t_open_paren     shift, and go to state 3

    GLOBAL      go to state 17
    VAR         go to state 6
    POLYNOM     go to state 7
    VAR_IN_POW  go to state 8
    SKOB        go to state 9
    EXPR        go to state 10


State 5

    2 START: GLOBAL .

    $default  reduce using rule 2 (START)


State 6

    3 GLOBAL: VAR .

    $default  reduce using rule 3 (GLOBAL)


State 7

    4 GLOBAL: POLYNOM .
   20 EXPR: POLYNOM . SIGN POLYNOM
   21     | POLYNOM . SIGN SKOB

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21

    $default  reduce using rule 4 (GLOBAL)

    SIGN  go to state 22


State 8

    6 POLYNOM: VAR_IN_POW . SIGN EXPR
    7        | VAR_IN_POW .

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21

    t_plus            [reduce using rule 7 (POLYNOM)]
    t_minus           [reduce using rule 7 (POLYNOM)]
    t_division        [reduce using rule 7 (POLYNOM)]
    t_multiplication  [reduce using rule 7 (POLYNOM)]
    $default          reduce using rule 7 (POLYNOM)

    SIGN  go to state 23


State 9

   22 EXPR: SKOB . SIGN POLYNOM
   23     | SKOB . SIGN SKOB
   24     | SKOB . SKOB

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21
    t_open_paren      shift, and go to state 3

    SKOB  go to state 24
    SIGN  go to state 25


State 10

    8 POLYNOM: EXPR . SIGN VAR_IN_POW

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21

    SIGN  go to state 26


State 11

   11 POW: t_power . t_number
   12    | t_power . SKOB_I

    t_number      shift, and go to state 27
    t_open_paren  shift, and go to state 28

    SKOB_I  go to state 29


State 12

   10 VAR_IN_POW: t_variable POW .

    $default  reduce using rule 10 (VAR_IN_POW)


State 13

    5 VAR: t_variable_name t_short_assignment . POLYNOM

    t_variable    shift, and go to state 1
    t_open_paren  shift, and go to state 3

    POLYNOM     go to state 30
    VAR_IN_POW  go to state 8
    SKOB        go to state 9
    EXPR        go to state 10


State 14

   20 EXPR: POLYNOM . SIGN POLYNOM
   21     | POLYNOM . SIGN SKOB

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21

    SIGN  go to state 22


State 15

    8 POLYNOM: EXPR . SIGN VAR_IN_POW
   19 SKOB: t_open_paren EXPR . t_close_paren

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21
    t_close_paren     shift, and go to state 31

    SIGN  go to state 26


State 16

    0 $accept: START $end .

    $default  accept


State 17

    1 START: START GLOBAL .

    $default  reduce using rule 1 (START)


State 18

   25 SIGN: t_plus .

    $default  reduce using rule 25 (SIGN)


State 19

   26 SIGN: t_minus .

    $default  reduce using rule 26 (SIGN)


State 20

   28 SIGN: t_division .

    $default  reduce using rule 28 (SIGN)


State 21

   27 SIGN: t_multiplication .

    $default  reduce using rule 27 (SIGN)


State 22

   20 EXPR: POLYNOM SIGN . POLYNOM
   21     | POLYNOM SIGN . SKOB

    t_variable    shift, and go to state 1
    t_open_paren  shift, and go to state 3

    POLYNOM     go to state 32
    VAR_IN_POW  go to state 8
    SKOB        go to state 33
    EXPR        go to state 10


State 23

    6 POLYNOM: VAR_IN_POW SIGN . EXPR

    t_variable    shift, and go to state 1
    t_open_paren  shift, and go to state 3

    POLYNOM     go to state 14
    VAR_IN_POW  go to state 8
    SKOB        go to state 9
    EXPR        go to state 34


State 24

   24 EXPR: SKOB SKOB .

    $default  reduce using rule 24 (EXPR)


State 25

   22 EXPR: SKOB SIGN . POLYNOM
   23     | SKOB SIGN . SKOB

    t_variable    shift, and go to state 1
    t_open_paren  shift, and go to state 3

    POLYNOM     go to state 35
    VAR_IN_POW  go to state 8
    SKOB        go to state 36
    EXPR        go to state 10


State 26

    8 POLYNOM: EXPR SIGN . VAR_IN_POW

    t_variable  shift, and go to state 1

    VAR_IN_POW  go to state 37


State 27

   11 POW: t_power t_number .

    $default  reduce using rule 11 (POW)


State 28

   13 SKOB_I: t_open_paren . EXPR_I t_close_paren

    t_number      shift, and go to state 38
    t_open_paren  shift, and go to state 28

    SKOB_I          go to state 39
    EXPR_I          go to state 40
    EXPR_I_FULFILL  go to state 41


State 29

   12 POW: t_power SKOB_I .

    $default  reduce using rule 12 (POW)


State 30

    5 VAR: t_variable_name t_short_assignment POLYNOM .
   20 EXPR: POLYNOM . SIGN POLYNOM
   21     | POLYNOM . SIGN SKOB

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21

    $default  reduce using rule 5 (VAR)

    SIGN  go to state 22


State 31

   19 SKOB: t_open_paren EXPR t_close_paren .

    $default  reduce using rule 19 (SKOB)


State 32

   20 EXPR: POLYNOM . SIGN POLYNOM
   20     | POLYNOM SIGN POLYNOM .
   21     | POLYNOM . SIGN SKOB

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21

    t_plus            [reduce using rule 20 (EXPR)]
    t_minus           [reduce using rule 20 (EXPR)]
    t_division        [reduce using rule 20 (EXPR)]
    t_multiplication  [reduce using rule 20 (EXPR)]
    $default          reduce using rule 20 (EXPR)

    SIGN  go to state 22


State 33

   21 EXPR: POLYNOM SIGN SKOB .
   22     | SKOB . SIGN POLYNOM
   23     | SKOB . SIGN SKOB
   24     | SKOB . SKOB

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21
    t_open_paren      shift, and go to state 3

    t_plus            [reduce using rule 21 (EXPR)]
    t_minus           [reduce using rule 21 (EXPR)]
    t_division        [reduce using rule 21 (EXPR)]
    t_multiplication  [reduce using rule 21 (EXPR)]
    t_open_paren      [reduce using rule 21 (EXPR)]
    $default          reduce using rule 21 (EXPR)

    SKOB  go to state 24
    SIGN  go to state 25


State 34

    6 POLYNOM: VAR_IN_POW SIGN EXPR .
    8        | EXPR . SIGN VAR_IN_POW

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21

    t_plus            [reduce using rule 6 (POLYNOM)]
    t_minus           [reduce using rule 6 (POLYNOM)]
    t_division        [reduce using rule 6 (POLYNOM)]
    t_multiplication  [reduce using rule 6 (POLYNOM)]
    $default          reduce using rule 6 (POLYNOM)

    SIGN  go to state 26


State 35

   20 EXPR: POLYNOM . SIGN POLYNOM
   21     | POLYNOM . SIGN SKOB
   22     | SKOB SIGN POLYNOM .

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21

    t_plus            [reduce using rule 22 (EXPR)]
    t_minus           [reduce using rule 22 (EXPR)]
    t_division        [reduce using rule 22 (EXPR)]
    t_multiplication  [reduce using rule 22 (EXPR)]
    $default          reduce using rule 22 (EXPR)

    SIGN  go to state 22


State 36

   22 EXPR: SKOB . SIGN POLYNOM
   23     | SKOB . SIGN SKOB
   23     | SKOB SIGN SKOB .
   24     | SKOB . SKOB

    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21
    t_open_paren      shift, and go to state 3

    t_plus            [reduce using rule 23 (EXPR)]
    t_minus           [reduce using rule 23 (EXPR)]
    t_division        [reduce using rule 23 (EXPR)]
    t_multiplication  [reduce using rule 23 (EXPR)]
    t_open_paren      [reduce using rule 23 (EXPR)]
    $default          reduce using rule 23 (EXPR)

    SKOB  go to state 24
    SIGN  go to state 25


State 37

    8 POLYNOM: EXPR SIGN VAR_IN_POW .

    $default  reduce using rule 8 (POLYNOM)


State 38

   16 EXPR_I_FULFILL: t_number .

    $default  reduce using rule 16 (EXPR_I_FULFILL)


State 39

   17 EXPR_I_FULFILL: SKOB_I .

    $default  reduce using rule 17 (EXPR_I_FULFILL)


State 40

   13 SKOB_I: t_open_paren EXPR_I . t_close_paren
   18 EXPR_I_FULFILL: EXPR_I .

    t_close_paren  shift, and go to state 42

    $default  reduce using rule 18 (EXPR_I_FULFILL)


State 41

   14 EXPR_I: EXPR_I_FULFILL . SIGN EXPR_I_FULFILL
   15       | EXPR_I_FULFILL . EXPR_I_FULFILL

    t_number          shift, and go to state 38
    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21
    t_open_paren      shift, and go to state 28

    SKOB_I          go to state 39
    EXPR_I          go to state 43
    EXPR_I_FULFILL  go to state 44
    SIGN            go to state 45


State 42

   13 SKOB_I: t_open_paren EXPR_I t_close_paren .

    $default  reduce using rule 13 (SKOB_I)


State 43

   18 EXPR_I_FULFILL: EXPR_I .

    $default  reduce using rule 18 (EXPR_I_FULFILL)


State 44

   14 EXPR_I: EXPR_I_FULFILL . SIGN EXPR_I_FULFILL
   15       | EXPR_I_FULFILL . EXPR_I_FULFILL
   15       | EXPR_I_FULFILL EXPR_I_FULFILL .

    t_number          shift, and go to state 38
    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21
    t_open_paren      shift, and go to state 28

    t_number          [reduce using rule 15 (EXPR_I)]
    t_plus            [reduce using rule 15 (EXPR_I)]
    t_minus           [reduce using rule 15 (EXPR_I)]
    t_division        [reduce using rule 15 (EXPR_I)]
    t_multiplication  [reduce using rule 15 (EXPR_I)]
    t_open_paren      [reduce using rule 15 (EXPR_I)]
    $default          reduce using rule 15 (EXPR_I)

    SKOB_I          go to state 39
    EXPR_I          go to state 43
    EXPR_I_FULFILL  go to state 44
    SIGN            go to state 45


State 45

   14 EXPR_I: EXPR_I_FULFILL SIGN . EXPR_I_FULFILL

    t_number      shift, and go to state 38
    t_open_paren  shift, and go to state 28

    SKOB_I          go to state 39
    EXPR_I          go to state 43
    EXPR_I_FULFILL  go to state 46


State 46

   14 EXPR_I: EXPR_I_FULFILL . SIGN EXPR_I_FULFILL
   14       | EXPR_I_FULFILL SIGN EXPR_I_FULFILL .
   15       | EXPR_I_FULFILL . EXPR_I_FULFILL

    t_number          shift, and go to state 38
    t_plus            shift, and go to state 18
    t_minus           shift, and go to state 19
    t_division        shift, and go to state 20
    t_multiplication  shift, and go to state 21
    t_open_paren      shift, and go to state 28

    t_number          [reduce using rule 14 (EXPR_I)]
    t_plus            [reduce using rule 14 (EXPR_I)]
    t_minus           [reduce using rule 14 (EXPR_I)]
    t_division        [reduce using rule 14 (EXPR_I)]
    t_multiplication  [reduce using rule 14 (EXPR_I)]
    t_open_paren      [reduce using rule 14 (EXPR_I)]
    $default          reduce using rule 14 (EXPR_I)

    SKOB_I          go to state 39
    EXPR_I          go to state 43
    EXPR_I_FULFILL  go to state 44
    SIGN            go to state 45
